@charset "utf-8";
/* CGV PJ 인트로 페이지 CSS - intro.css */

/* 외부 CSS 합치기 */
@import url(reset.css);
@import url(core.css);

/* 전체 페이지 보이는 화면기준 */
html,body{
    width: 100vw;
    height: 100vh;
    /* 스크롤바 안생김! */
    overflow: hidden;
}

/* 비디오 요소 */
#myvid {
    width: 100%;
    height: 100%;
    object-fit: cover;
    /* 
        [ object-fit 속성 ]
        -> img, video 요소에 사용하는 맞춤속성

        - 부모요소 크기를 채우는 방식을 결정함
        - contain 기본값
        빈공간 없이 비율을 유지하면 채울 수 있다고
        생각하는데 이 속성을 사용하면 마치 배경이미지처럼
        이미지를 채우고 나가는 부분을 처리함

        1. cover : 이미지나 동영상 비율유지하며
                    부모박스를 빈공간 없이 채움
                    (잘리는 부분이 있을 수 있음
        2. fill : 이미지나 동영상의 비율을 깨고
                    부모박스를 빈공간 없이 채움
                    (잘리는 부분이 없다)
        3. contain : 이미지나 동영상이 모두 보이며
                    비율을 유지함
                    (잘리는 부분이 없으나 빈공간이 생김)
        
    */
    /* 필터의 명도를 조정하여 어두워보이게 */
    filter: brightness(50%);
    /* 
        용어체크:
        오버레이효과(overlay) - 어둡게 처리
        트랜스페런트효과(transparent) - 밝게 처리
    */
}

#enter {
    position: absolute;
    top: 50%;
    left: 50%;
    /* 트랜스폼 정중앙이동 */
    transform: translate(-50%, -50%);

    /* outline: 4px dotted lime; */
}
/* Click Here 글자박스 */
#enter span {
    display: block;
    font-size: 3.4rem;
    text-align: center;
    font-family: 'Noto Serif KR', serif;
    /* 트랜지션: 속시이지 */
    transition: all .4s ease-out;
}
/* 오버시 글자박스 */
#enter:hover span {
    color: chartreuse;
    transform: scale(2);
    transition-delay: .2s;
    /* font-family: 'Ma Shan Zheng', cursive; */
    /* 트랜지션에는 font-family, display등 속성은 안먹힌다. */
}
#enter img {
    transition: all .4s ease-out;
}
#enter:hover img {
    transform: rotate(-15deg) scale(1.5);
}
/* CSS의 transition 속성은 엘리먼트의 CSS 속성을 변경할 때 두 가지 상태 사이에 일어나는 변화(애니메이션)를 커스터마이징 할 때 사용한다
   CSS의 transform 속성은 엘리먼트에 회전, 크기 조절, 기울이기, 이동 효과 등을 부여할 때 사용한다 */